import{S as he,i as fe,s as ge,k as x,q as U,a as R,l as C,m as B,r as K,h as _,c as q,n as d,b as V,G as I,J as Q,u as W,H as te,K as L,L as me,p as se}from"../chunks/index.dcdc7bd0.js";function le(l){return`grid-template-columns: ${Array.from({length:Math.sqrt(l)},()=>"1fr").join(" ")};`}function ne(l){return Array.from({length:l},()=>{let s=Math.floor(Math.random()*10)+1,t=pe(s);return{health:s,color:t}})}function pe(l){const s=255-l*25,t=l*25;return`rgb(${s}, ${t}, 0)`}function de(l,s){return l===s?s:Math.floor(Math.random()*(s-l+1)+l)}function ve(l,s,t,e){const o=[],r=new Set;console.log("Total sets are being generated"),console.log("Creating new neighbours between: "+t+" and "+e);for(let i=0;i<s;i++){let f;do f=Math.floor(Math.random()*l.length);while(r.has(f));r.add(f);let u=de(t,e);const c=Math.sqrt(l.length),p=f%c,v=Math.floor(f/c),g=Math.max(v-1,0),S=Math.max(p-1,0),h=Math.min(v+1,c-1),b=Math.min(p+1,c-1),N=[];for(let E=g;E<=h;E++)for(let A=S;A<=b;A++){const O=E*c+A;O!==f&&N.push(O)}N.length<u&&(u=N.length);const m=[];for(;m.length<u;){const E=N[Math.floor(Math.random()*N.length)];m.includes(E)||m.push(E)}const y=[f,...m];o.push(y),console.log(`Set ${i}:
			Starting Index = ${f}
			Total Neighbors = ${u}
			Neighbors = ${m}`)}return o}function be(l,s,t,e,o,r){console.log("--------------------"),console.log("Running Algorithm");let i=1,f=ve(l,s,o,r),u=[];for(;u.length<t;)if(t-u.length==1)console.log("Finished"),u.push(1);else{console.log("Picking turn: ",i);let c=_e(f,e);c.sort((v,g)=>g.length-v.length);let p=c.map(v=>({combination:v.join(" ||| ")}));console.table(p);for(let v=0;v<e;v++)u.push(v);i++}return u}function _e(l,s){console.log("Generating combinations");let t=[];const e=l.length;switch(s){case 1:break;case 2:console.log("Combinations of 2 sets");for(let o=0;o<e-1;o++)for(let r=o+1;r<e;r++)t.push([l[o],l[r]]);break;case 3:console.log("Combinations of 3 sets");for(let o=0;o<e-2;o++)for(let r=o+1;r<e-1;r++)for(let i=r+1;i<e;i++)t.push([l[o],l[r],l[i]]);break;case 4:console.log("Combinations of 4 sets");for(let o=0;o<e-3;o++)for(let r=o+1;r<e-2;r++)for(let i=r+1;i<e-1;i++)for(let f=i+1;f<e;f++)t.push([l[o],l[r],l[i],l[f]]);break;default:console.error("Invalid step size:",s);break}return t}function oe(l,s,t){const e=l.slice();return e[14]=s[t],e}function re(l,s,t){const e=l.slice();return e[17]=s[t],e}function ae(l,s,t){const e=l.slice();return e[20]=s[t],e[22]=t,e}function ie(l){let s,t;return{c(){s=x("div"),t=U(l[22]),this.h()},l(e){s=C(e,"DIV",{class:!0});var o=B(s);t=K(o,l[22]),o.forEach(_),this.h()},h(){d(s,"class","matrix-board-cell svelte-uc5tnh"),se(s,"background-color",l[20].color)},m(e,o){V(e,s,o),I(s,t)},p(e,o){o&2&&se(s,"background-color",e[20].color)},d(e){e&&_(s)}}}function ue(l){let s,t=l[17].name+"",e;return{c(){s=x("div"),e=U(t)},l(o){s=C(o,"DIV",{});var r=B(s);e=K(r,t),r.forEach(_)},m(o,r){V(o,s,r),I(s,e)},p(o,r){r&1&&t!==(t=o[17].name+"")&&W(e,t)},d(o){o&&_(s)}}}function ce(l){let s,t,e,o,r,i,f,u=l[14].value+"",c,p,v,g,S;return{c(){s=x("input"),i=R(),f=x("span"),c=U(u),p=R(),v=x("br"),this.h()},l(h){s=C(h,"INPUT",{type:!0,class:!0,step:!0,min:!0,max:!0,id:!0}),i=q(h),f=C(h,"SPAN",{});var b=B(f);c=K(b,u),b.forEach(_),p=q(h),v=C(h,"BR",{}),this.h()},h(){d(s,"type","range"),d(s,"class","slider svelte-uc5tnh"),d(s,"step","1"),d(s,"min",t=l[14].min),d(s,"max",e=l[14].max),s.value=o=l[14].value,d(s,"id",r=l[14].id)},m(h,b){V(h,s,b),V(h,i,b),V(h,f,b),I(f,c),V(h,p,b),V(h,v,b),g||(S=Q(s,"change",l[6]),g=!0)},p(h,b){b&1&&t!==(t=h[14].min)&&d(s,"min",t),b&1&&e!==(e=h[14].max)&&d(s,"max",e),b&1&&o!==(o=h[14].value)&&(s.value=o),b&1&&r!==(r=h[14].id)&&d(s,"id",r),b&1&&u!==(u=h[14].value+"")&&W(c,u)},d(h){h&&_(s),h&&_(i),h&&_(f),h&&_(p),h&&_(v),g=!1,S()}}}function Ie(l){let s,t,e,o,r,i,f,u,c,p,v,g,S,h,b,N,m,y,E,A,O,G=l[1],w=[];for(let a=0;a<G.length;a+=1)w[a]=ie(ae(l,G,a));let j=l[0],M=[];for(let a=0;a<j.length;a+=1)M[a]=ue(re(l,j,a));let P=l[0],k=[];for(let a=0;a<P.length;a+=1)k[a]=ce(oe(l,P,a));return{c(){s=x("div"),t=x("div"),e=x("div"),o=U(l[3]),r=R(),i=x("div");for(let a=0;a<w.length;a+=1)w[a].c();f=R(),u=x("div"),c=x("div"),p=x("button"),v=U("Create New Board"),g=R(),S=x("button"),h=U("Run Algorithm"),b=R(),N=x("div"),m=x("div");for(let a=0;a<M.length;a+=1)M[a].c();y=R(),E=x("div");for(let a=0;a<k.length;a+=1)k[a].c();this.h()},l(a){s=C(a,"DIV",{class:!0});var T=B(s);t=C(T,"DIV",{class:!0});var n=B(t);e=C(n,"DIV",{class:!0});var D=B(e);o=K(D,l[3]),D.forEach(_),r=q(n),i=C(n,"DIV",{class:!0,style:!0});var X=B(i);for(let z=0;z<w.length;z+=1)w[z].l(X);X.forEach(_),n.forEach(_),f=q(T),u=C(T,"DIV",{class:!0});var F=B(u);c=C(F,"DIV",{class:!0});var H=B(c);p=C(H,"BUTTON",{class:!0});var Y=B(p);v=K(Y,"Create New Board"),Y.forEach(_),g=q(H),S=C(H,"BUTTON",{class:!0});var Z=B(S);h=K(Z,"Run Algorithm"),Z.forEach(_),H.forEach(_),b=q(F),N=C(F,"DIV",{class:!0});var J=B(N);m=C(J,"DIV",{class:!0});var $=B(m);for(let z=0;z<M.length;z+=1)M[z].l($);$.forEach(_),y=q(J),E=C(J,"DIV",{class:!0});var ee=B(E);for(let z=0;z<k.length;z+=1)k[z].l(ee);ee.forEach(_),J.forEach(_),F.forEach(_),T.forEach(_),this.h()},h(){d(e,"class","matrix-message-status svelte-uc5tnh"),d(i,"class","matrix-board svelte-uc5tnh"),d(i,"style",l[2]),d(t,"class","matrix-container"),d(p,"class","svelte-uc5tnh"),d(S,"class","svelte-uc5tnh"),d(c,"class","settings-buttons svelte-uc5tnh"),d(m,"class","settings-inputs-labels svelte-uc5tnh"),d(E,"class","settings-inputs-sliders svelte-uc5tnh"),d(N,"class","settings-inputs svelte-uc5tnh"),d(u,"class","settings svelte-uc5tnh"),d(s,"class","container svelte-uc5tnh")},m(a,T){V(a,s,T),I(s,t),I(t,e),I(e,o),I(t,r),I(t,i);for(let n=0;n<w.length;n+=1)w[n]&&w[n].m(i,null);I(s,f),I(s,u),I(u,c),I(c,p),I(p,v),I(c,g),I(c,S),I(S,h),I(u,b),I(u,N),I(N,m);for(let n=0;n<M.length;n+=1)M[n]&&M[n].m(m,null);I(N,y),I(N,E);for(let n=0;n<k.length;n+=1)k[n]&&k[n].m(E,null);A||(O=[Q(p,"pointerdown",l[4]),Q(S,"pointerdown",l[5])],A=!0)},p(a,[T]){if(T&8&&W(o,a[3]),T&2){G=a[1];let n;for(n=0;n<G.length;n+=1){const D=ae(a,G,n);w[n]?w[n].p(D,T):(w[n]=ie(D),w[n].c(),w[n].m(i,null))}for(;n<w.length;n+=1)w[n].d(1);w.length=G.length}if(T&4&&d(i,"style",a[2]),T&1){j=a[0];let n;for(n=0;n<j.length;n+=1){const D=re(a,j,n);M[n]?M[n].p(D,T):(M[n]=ue(D),M[n].c(),M[n].m(m,null))}for(;n<M.length;n+=1)M[n].d(1);M.length=j.length}if(T&65){P=a[0];let n;for(n=0;n<P.length;n+=1){const D=oe(a,P,n);k[n]?k[n].p(D,T):(k[n]=ce(D),k[n].c(),k[n].m(E,null))}for(;n<k.length;n+=1)k[n].d(1);k.length=P.length}},i:te,o:te,d(a){a&&_(s),L(w,a),L(M,a),L(k,a),A=!1,me(O)}}}function we(l,s,t){let e=[{name:"Board Size",min:10,max:20,value:10,id:"map-size"},{name:"Sets To Generate",min:2,max:10,value:2,id:"total-sets"},{name:"Sets To Select",min:2,max:10,value:2,id:"select-sets"},{name:"Step Size",min:2,max:4,value:2,id:"step-size"},{name:"Min Neigbors",min:0,max:8,value:0,id:"min-neighbors"},{name:"Max Neigbors",min:0,max:8,value:0,id:"max-neighbors"},{name:"Transition Time",min:1,max:3,value:1,id:"transition-time"}],o=parseInt(e[0].value)**2,r=parseInt(e[1].value),i=parseInt(e[2].value),f=parseInt(e[3].value),u=parseInt(e[4].value),c=parseInt(e[5].value),p=ne(o);console.log("Initial Matrix"),console.log(p);let v=le(o),g="Board is set";function S(){console.log("Building a new Board..."),t(3,g="New Board Set"),t(1,p.length=0,p),o=parseInt(e[0].value)**2,t(1,p=ne(o)),t(2,v=le(o)),console.log(p)}function h(){t(3,g="Executing: Big Step Greedy Maximum Ground Coverage"),be(p,r,i,f,u,c)}function b(m){switch(m.target.id){case"map-size":t(0,e[0].value=parseInt(m.target.value),e),o=parseInt(m.target.value)**2,t(3,g=`New board size: ${Math.sqrt(o)} x ${Math.sqrt(o)} = ${o}
`),t(3,g+='Press "Create new board" to set up a new board');break;case"total-sets":t(0,e[1].value=parseInt(m.target.value),e),r=parseInt(m.target.value),parseInt(r)<parseInt(i)&&(t(0,e[1].value=r,e),t(0,e[2].value=r,e),i=r);let y=parseInt(r)*parseInt(c)+parseInt(r);t(3,g=`Total sets to generate: ${r}
`),t(3,g+=`Random starting point.
`),t(3,g+=`They will produce: (${r} + ${r} x ${c}) = ${y} cells at most`);break;case"select-sets":t(0,e[2].value=parseInt(m.target.value),e),i=parseInt(m.target.value),t(0,e[2].value=i,e),parseInt(i)>parseInt(r)&&(t(0,e[1].value=i,e),t(0,e[2].value=i,e),r=i),t(3,g=`Total sets to select from a pile: ${i} / ${r}`);break;case"step-size":t(0,e[3].value=parseInt(m.target.value),e),f=parseInt(m.target.value),t(3,g=`Step size is: ${f}
`),t(3,g+=`This means sets to the power of step size combinations
`);break;case"min-neighbors":t(0,e[4].value=parseInt(m.target.value),e),u=parseInt(m.target.value),t(3,g=`Neighbours between: ${u} and ${c}`),parseInt(u)>parseInt(c)&&(t(0,e[5].value=u,e),t(0,e[4].value=u,e),c=e[5].value,t(3,g=`Neighbours between: ${u} and ${c}`));break;case"max-neighbors":t(0,e[5].value=parseInt(m.target.value),e),c=parseInt(m.target.value),t(3,g=`Neighbours between: ${u} and ${c}`),parseInt(c)<parseInt(u)&&(t(0,e[4].value=c,e),t(0,e[5].value=c,e),u=c,t(3,g=`Neighbours between: ${u} and ${c}`));break}}return[e,p,v,g,S,h,b,!0]}class ke extends he{constructor(s){super(),fe(this,s,we,Ie,ge,{prerender:7})}get prerender(){return this.$$.ctx[7]}}export{ke as default};
